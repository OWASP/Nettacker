API: API
API_access_key: API 访问密钥
API_access_log_file: API 访问日志文件名
API_cert: API CERTIFICATE
API_cert_key: API CERTIFICATE Key
API_debug: API 调试模式
API_host: API 主机地址
API_invalid: 无效的 API 密钥
API_key: "* API 密钥：{0}"
API_options: API 选项
API_port: API 端口号
Method: 方法
skip_service_discovery: skip service discovery before scan and enforce all modules to scan anyway
no_live_service_found: no any live service found to scan.
icmp_need_root_access: to use icmp_scan module or --ping-before-scan you need to run the script as root!
available_graph: 建立所有活动和信息的图表，您必须使用 HTML 输出。可用图表：{0}
browser_session_killed: 您的浏览器会话中断
browser_session_valid: 您的浏览器会话有效
build_graph: 正在生成图表...
connection_retries: 连接超时时重试（默认3）
current_version: 您正在运行代码为{3} {4} {5}的 OWASP Nettacker 版本{0} {1} {2} {6}
database_connect_fail: 无法连接到数据库！
database_connection_failed: Connection to the selected db failed
define_white_list: 定义白名单主机，与之分开，（例如：127.0.0.1,192.168.0.1/24,10.0.0.1-10.0.0.255）
engine: Nettacker
filtered_content: '... [see the full content in the report]'
engine_input: 选项
Invalid_whatcms_api_key: "{0}"
searching_whatcms_database: Searching for CMS on whatcms.org...
whatcms_monthly_quota_exceeded: You have exceeded your monthly WHATCMS request quota
finished_module: finished module {0} towards the target {1} | module thread number {2} from {3}!
modules_extra_args_help: add extra args to pass to modules (e.g. --modules-extra-args "x_api_key=123&xyz_passwd=abc"
choose_scan_method: 选择扫描方法{0}
cannot_run_api_server: You can't run API Server through itself!
error_target: 无法指定目标（s）
error_target_file: 无法指定目标，无法打开文件：{0}
error_username: 无法指定用户名，无法打开文件：{0}
error_passwords: "Cannot specify the password(s), unable to open file: {0}"
error_wordlist: "Cannot specify the word(s), unable to open file {0}"
exclude_scan_method: 排除扫描方法{0}
file_write_error: 文件“{0}”不可写！
library_not_supported: library [{0}] is not support!
removing_old_db_records: Removing old database record for selected targets and modules.
regrouping_targets: regrouping targets based on hardware resources!
finish_build_graph: 图表生成完成！
finished_parallel_module_scan: process-{0}|{1}|{2}| finished module thread number {3} from {4}
graph_message: 这张图由 OWASP Nettacker 创建。图表包含所有模块活动，网络图和敏感信息，请不要与任何人共享此文件。
graph_module_404: 未找到此图形模块：{0}
graph_module_unavailable: 此图形模块“{0}”不可用
graph_output: 要使用图表功能，您的输出文件名必须以“.html”或“.htm”结尾！
help_menu: 显示 Nettacker 菜单
done: 完成了！
error_platform: 不幸的是，这个版本的软件只能在 linux / osx / windows 上运行。
file_saved: "report saved in {0} and database"
inserting_report_db: 保存报告到数据库
invalid_database: Please select from mysql or sqlite in the configuration file
invalid_json_type_to_db: "Invalid type of JSON data for the database. Skipping the submission to database. Data:{0}"
license: 请阅读许可证和协议 https://github.com/OWASP/Nettacker
loaded_modules: "{0}模块已加载..."
loading_modules: loading all modules... it might get some time!
loading_profiles: loading all profiles... it might get some time!
module_profile_full_information: "{0}{1}{2}: {3}"
nettacker_report: OWASP Nettacker 报告
nettacker_version_details: 软件详细信息：{2}中的 OWASP Nettacker 版本{0} [{1}]
not_found: 未找到！
outgoing_proxy: 传出连接代理（socks）。例如 socks5：127.0.0.1:9050，socks：//127.0.0.1：9050 socks5：//127.0.0.1：9050或socks4：socks4：//127.0.0.1：9050，authentication：socks：// username：password @ 127.0.0.1，socks4：//用户名：password@127.0.0.1，socks5：//用户名：password@127.0.0.1
password_separator: 密码列表，用“，”分开
pentest_graphs: 渗透测试图
ping_before_scan: ping 主机存活检测
port_separator: 端口列表，用“，”分开
ports_int: 端口必须是整数！ （例如 80 || 80,1080 || 80,1080-1300,9000,12000-15000）
profile_404: 未找到配置文件“{0}”！
range: 扫描范围内的所有 IP
read_passwords: 从文件中读取密码
read_target: 从文件中读取目标文件
removing_logs_db: 从数据库中删除旧日志
save_logs: 保存文件中的所有日志（results.txt，results.html，results.json）
scan_method_options: 扫描方法选项
scan_method_select: 请选择您的扫描方法！
scan_module_not_found: 未找到此扫描模块[{0}]！
scan_started: Nettacker 启动...
select_language: 选择一种语言{0}
select_profile: 选择配置文件{0}
select_user_agent: "Select a user agent to send with HTTP requests or enter \"random_user_agent\" to randomize the User-Agent in the requests."
send_success_event_from_module: "process-{0}|{1}|{2}|module-thread {3}/{4}|request-thread {5}/{6}|{7}|\nsuccess_condition (s): \n{8}"
send_unsuccess_event_from_module: "process-{0}|{1}|{2}|module-thread {3}/{4}|request-thread {5}/{6}| all conditions failed"
sending_module_request: "process-{0}|{1}|{2}|module-thread {3}/{4}| sending request {5} from {6}"
verbose_event: enable verbose event to see state of each thread
no_events_for_report: there are no events exist to create a report! skipping this section.
set_hardware_usage: Set hardware usage while scanning. (low, normal, high, maximum)
show_all_modules: show all modules and their information
show_all_profiles: show all profiles and their information
single_process_started: process-{0}| process is started!
software_version: 显示软件版本
start_api_server: 启动 API 服务
start_multi_process: imported {0} targets in {1} process(es).
start_parallel_module_scan: process-{0}|{1}|{2}| started module thread number {3} from {4}
subdomains: 扫描子域名
target: 目标
target_input: 目标选项
target_list: 目标列表，用“，”分隔
thread_number_connections: 用于连接到主机的线程数
thread_number_modules: parallel module scan for hosts
time_to_sleep: 每次请求的间隔时间
unauthorized_IP: 您的 IP 未经授权
updating_database: 更新数据库...
username_from_file: 从文件中读取用户名
username_list: 用户名列表，用“，”分开
verbose_mode: 详细模式级别（0-5）（默认0）
wrong_hardware_usage: "You must select one of these profiles for hardware usage. (low, normal, high, maximum)"
invalid_scan_id: your scan id is not valid!
compare_scans: compare current scan to old scans using the unique scan_id
compare_report_path_filename: "保存对比扫描报告的文件路径"
no_scan_to_compare: "未找到要比较的 scan_id"
compare_report_saved: "对比结果已保存到 {0}"
build_compare_report: "正在生成对比报告"
finish_build_report: "对比报告生成完成"
user_wordlist: "Allows users to enter their own wordlist"
