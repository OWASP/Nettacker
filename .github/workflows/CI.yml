# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  - pull_request
  - push

jobs:
  build-docker-image:
    name: Test Docker ${{ matrix.docker-version }} build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-version:
          - '24.0.6-1~ubuntu.22.04~jammy'
          - '23.0.6-1~ubuntu.22.04~jammy'
          - '20.10.13~3-0~ubuntu-jammy'
    steps:
      - name: Uninstall pre-installed Docker
        run: |
          sudo apt-get remove docker-ce docker-ce-cli

      # https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
      - name: Install Docker ${{ matrix.docker-version }}
        run: |
          sudo apt-get update
          sudo apt-get install ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce=5:${{ matrix.docker-version }} docker-ce-cli=5:${{ matrix.docker-version }}

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Print Docker version
        run: docker -v

      - name: Build Nettacker image
        run: docker build .

  test:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4.1.1

      - name: Build the code with docker
        run: docker build . -t nettacker

      - name: Lint
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm nettacker flake8 --extend-exclude
        '*.txt,*.js,*.md,*.html' --count --select=E9,F63,F7,F82 --show-source"

      - name: Help Menu
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm nettacker python nettacker.py --help"

      - name: Help Menu in Persian
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm nettacker python nettacker.py --help
          -L fa"

      - name: Show all modules
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm nettacker python nettacker.py
        --show-all-modules"

      - name: Show all profiles
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm nettacker python nettacker.py --show-all-profiles"

      - name: Test all modules command + check if it's finish successfully + csv
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm -i nettacker python nettacker.py
         -i 127.0.0.1 -u user1,user2 -p pass1,pass2 -m all -g 21,25,80,443 -t 1000 -T 3 -o out.csv"

      - name: Test all modules command + check if it's finish successfully + csv
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm -i nettacker python nettacker.py
          -i 127.0.0.1 -u user1,user2 -p pass1,pass2 -m all -g 21,25,80,443 -t 1000 -T 3 -o out.csv --skip-service-discovery"

      - name: Test all modules command + check if it's finish successfully + with graph + Persian
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm -i nettacker python nettacker.py -i
         127.0.0.1 -L fa -u user1,user2 -p pass1,pass2 --profile all -g 21,25,80,443 -t 1000 -T 3
         --graph d3_tree_v2_graph -v"

      - name: Test all modules command + check if it's finish successfully + with graph + Persian
        run: "docker run -e github_ci=true -v $(pwd):/usr/src/owaspnettacker --rm -i nettacker python nettacker.py -i
         127.0.0.1 -L fa -u user1,user2 -p pass1,pass2 --profile all -g 21,25,80,443 -t 1000 -T 3
         --graph d3_tree_v2_graph -v --skip-service-discovery"
