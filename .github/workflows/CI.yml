# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches:
      - master
      - development
    paths:
      - '**.py'
  pull_request:
    branches:
      - master
      - development
    paths:
      - '**.py'
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8] # python version is defined in docker

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install development dependencies
        run: sudo pip install -r requirements-dev.txt

      - name: lint check with flake8
        run: flake8 --extend-exclude '*.txt,*.js,*.md,*.html' --count --select=E9,F63,F7,F82 --show-source

      - name: Build the code with docker
        run: docker build . -t nettacker

      - name: Help Menu
        run: docker run -v $(pwd):/usr/src/owaspnettacker --rm nettacker python nettacker.py --help

      - name: Help Menu in Persian
        run: docker run -v $(pwd):/usr/src/owaspnettacker --rm nettacker python nettacker.py --help -L fa

      - name: Test all modules command + check if it's finish successfully + without graph
        run: docker run -v $(pwd):/usr/src/owaspnettacker --rm -i nettacker python nettacker.py  -i 127.0.0.1 -u user1,user2 -p pass1,pass2 -m all -g 21,25,80,443 -t 10000000 -T 0.1 -v 5 --method-args "subdomain_scan_time_limit_seconds=5"

      - name: Test all modules command + check if it's finish successfully + with graph
        run: docker run -v $(pwd):/usr/src/owaspnettacker --rm -i nettacker python nettacker.py -i 127.0.0.1 -u user1,user2 -p pass1,pass2 -m all -g 21,25,80,443 -t 10000000 -T 0.1 --graph d3_tree_v2_graph  --method-args "subdomain_scan_time_limit_seconds=5" -v 5

      - name: Test all modules command + check if it's finish successfully + without graph + Persian
        run: docker run -v $(pwd):/usr/src/owaspnettacker --rm -i nettacker python nettacker.py  -i 127.0.0.1 -L fa -u user1,user2 -p pass1,pass2 -m all -g 21,25,80,443 -t 10000000 -T 0.1 -v 5 --method-args "subdomain_scan_time_limit_seconds=5"

      - name: Test all modules command + check if it's finish successfully + with graph + Persian
        run: docker run -v $(pwd):/usr/src/owaspnettacker --rm -i nettacker python nettacker.py -i 127.0.0.1 -L fa -u user1,user2 -p pass1,pass2 -m all -g 21,25,80,443 -t 10000000 -T 0.1 --graph d3_tree_v2_graph  --method-args "subdomain_scan_time_limit_seconds=5" -v 5
